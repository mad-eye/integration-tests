#XXX TODO: Must find a way to source this from the puppet nginx conf.
daemon off;

pid /tmp/nginx.pid;

events {
    worker_connections  1024;  ## Default: 1024
}

http {
    include    mime.types;

    upstream app_server {
        server 127.0.0.1:3000 fail_timeout=0;
    }

    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    charset UTF-8;

    server {
        listen 8080;
        listen [::]:8080 default ipv6only=on;
        server_name localhost;

        root apogee/.meteor/local/build/programs/client/app/;

        location ~ ^/(userStatic)/  {
            root    /tmp;
            expires 0d;
        }

        location = / {
          index pages/home.html;
        }

        location = /get-started {
          try_files /pages/get-started.html =404;
        }

        location /pages/ {
          try_files $uri $uri.html =404;
        }

        #Serve static files of the meteor bundle directly from the bundle
        location /static/  {
          root apogee/.meteor/local/build/programs/client/app;
          expires 0d;
        }

        location /packages/  {
          root apogee/.meteor/local/build/programs/client;
          expires 0d;
        }

        #copy/paste from madeye-ops/puppet/modules/nginx/templates/site.erb
        location ~ /tunnel/(\d+)/(.*) {
            #TODO it's probably worthwhile to put the IP addresses in here instead
            #of using Google's DNS to resolve
            resolver 8.8.8.8;

            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header Host $http_host;
            proxy_pass http://tunnel-test.madeye.io:$1/$2;

            #support websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            if (!-f $request_filename) {
                proxy_pass http://app_server;
                break;
            }
        }

        location /sockjs/ {
            proxy_pass http://app_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
        }

        location /websocket {
            proxy_pass http://app_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
        }
    }

    # server {
    #     listen 443;
    #     server_name mike.madeye.io;
    #     ssl on;
    #     ssl_certificate /Users/mike/Downloads/STAR_madeye_io.crt;
    #     ssl_certificate_key /Users/mike/myserver.key;

    #     ssl_protocols SSLv3 TLSv1;
    #     ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

    #     location ~ ^/(userStatic)/  {
    #         root    /tmp;
    #         expires 0d;
    #     }

    #     location / {
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header Host $http_host;
    #         proxy_redirect off;

    #         if (!-f $request_filename) {
    #             proxy_pass http://app_server;
    #             break;
    #         }
    #     }
    # }
}
